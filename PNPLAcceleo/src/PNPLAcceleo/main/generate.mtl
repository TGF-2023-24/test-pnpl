[comment encoding = UTF-8 /]
[module generate('http://www.petrinets.org/pnplmetamodel')]

[template public generate(apnpl : pnpl)]
[comment @main/]
[file ('datos.json', false, 'UTF-8')]
{
	"pn_150": {
		"elements":['['/]
			[for (element: Element | apnpl.pn_150.elements) separator (',')]
				{
					"name": "[element.name/]",
					"xsi:type": "[element.eClass().toString().substring(element.eClass().toString().index(':')+2, element.eClass().toString().index(')')-1)/]",
					[if (element.name.equalsIgnoreCase('invalid'))]
					"presenceCondition": ""
					[else]
					"presenceCondition": "[element.presenceCondition.id/]"
					[/if]
				}
			[/for]

		[']'/]
		},
	"featuremodel": {
		"nodes": [ '[' /] 
			[for (nodo: Node | apnpl.featuremodel.nodes) separator(',')]
				{
					"name": "[nodo.name/]",
					"abstract": [nodo.abstract/],
					"mandatory": [nodo.mandatory/],
					"requires": "[nodo.requires.name/]",
					"excludes": "[nodo.exclude.name/]"
			
				}
			[/for]
		[ ']' /],
		"relations": [ '[' /]
			[for (relacion: Relation | apnpl.featuremodel.relations) separator(',')]
				{
					"parent": "[relacion.parent.name/]",
					"type": "[relacion.type/]",
					"children":"[for (hijo: Node | relacion.childs) separator(' ')][hijo.name/][/for]"
					
				}
			[/for]
		[ ']' /]
	},
	"presenceconditions": [ '[' /] 
		[for (pc: PresenceCondition | apnpl.presenceconditions) separator(',')]
			{
				"id": "[pc.id/]"
			}
		[/for]
	[ ']' /]
}
[/file]
[/template]
